{"version":3,"file":"static/js/815.7f0b8b73.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__Z6YM3\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [edit, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    return (\r\n        <>\r\n            {!edit &&\r\n                <div>\r\n                    <span onDoubleClick={activateMode} >{status || \"No status\"}</span>\r\n                </div>\r\n            }\r\n            {edit &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deactivateEditMode} value={status} onChange={onStatusChange}></input>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport styles from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    let {profile, status, updateStatus} = props;\r\n    if (!profile ) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src='https://thumbs.dreamstime.com/b/%D1%88%D0%B8%D1%80%D0%BE%D0%BA%D0%B0%D1%8F-%D0%BF%D0%B0%D0%BD%D0%BE%D1%80%D0%B0%D0%BC%D0%B0-%D0%B4%D0%BE%D1%80%D0%BE%D0%B3%D0%B8-%D0%B0%D1%81%D1%84%D0%B0%D0%BB%D1%8C%D1%82%D0%B0-%D0%B2-%D1%81%D0%B5%D0%BB%D1%8C%D1%81%D0%BA%D0%BE%D0%B9-%D0%BC%D0%B5%D1%81%D1%82%D0%BD%D0%BE%D1%81%D1%82%D0%B8-%D0%BB%D0%B5%D1%82%D0%BD%D0%B8%D0%B9-%D0%B4%D0%B5%D0%BD%D1%8C-%D0%BD%D0%B0-214241529.jpg'\r\n                    alt='decks'>\r\n                </img>\r\n            </div>\r\n            <div className={styles.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} props={props}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__Z70Lw\",\"posts\":\"MyPosts_posts__vLEgj\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__MGkD7\"};","import React from \"react\";\r\nimport styles from'./Post.module.css';\r\nconst Post = (props) => {\r\n    return <div className={styles.item}>\r\n        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT4HvloBhZVvCau4er4R7GJV3y0k-01b4sLiQ&usqp=CAU\" alt=\"desc\"></img>\r\n          {props.message}\r\n          <div>\r\n            <span>{props.likesCount}</span>\r\n          </div>\r\n        </div>\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport styles from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, maxLengthCreator} from \"../../../utils/validators/validators\"\r\nimport {Textarea} from \"../../common/FormControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nclass MyPostsForm extends React.Component {\r\n    render() {\r\n        let postElement = this.props.posts.map(p => <Post key={p.id} message={p.text} likesCount={p.likesCount}/>)\r\n\r\n        let onAddPost = (values) => {\r\n            this.props.addPost(values.newMessage);\r\n        }\r\n\r\n        return <div className={styles.postsBlock}>\r\n            <h2>\r\n                My posts\r\n            </h2>\r\n            <MyPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={styles.posts}>\r\n                {postElement}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"newMessage\"} component={Textarea} validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostFormRedux = reduxForm({\r\n    form: 'ProfileAddNewPostForm'\r\n})(AddNewPostForm)\r\n\r\n\r\nexport default MyPostsForm","import {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        posts: state.profilePage.posts,\r\n        newPostText : state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId){\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    render () {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    });\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","useState","edit","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","profile","src","alt","className","styles","photos","large","Preloader","message","likesCount","maxLength10","maxLengthCreator","MyPostsForm","postElement","this","posts","map","p","text","id","MyPostFormRedux","onSubmit","values","addPost","newMessage","React","reduxForm","form","handleSubmit","Field","name","component","Textarea","validate","required","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userId","router","params","authorizedUserId","getUserProfile","getStatus","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","RedirectComponent","to"],"sourceRoot":""}