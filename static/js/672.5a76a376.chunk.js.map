{"version":3,"file":"static/js/672.5a76a376.chunk.js","mappings":"gKACA,G,QAA0B,0BAA1B,EAAiE,6BAAjE,EAAuG,wBAAvG,EAA2K,0BAA3K,EAA+M,yB,mBCa/M,EATmB,SAACA,GAChB,IAAIC,EAAO,WAAaD,EAAME,GAC9B,OACI,gBAAKC,UAAWC,EAAgB,IAAMA,EAAtC,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,UCEtC,EARgB,SAACN,GACb,OACI,0BACI,gBAAKG,UAAWC,EAAhB,SAAgCJ,EAAMO,U,uCCE5CC,GAAcC,EAAAA,EAAAA,GAAiB,IAyC/BC,GAAyBC,EAAAA,EAAAA,GAAU,CACrCC,KAAM,qBADqBD,EAfL,SAACX,GACvB,OACA,kBAAMa,SAAUb,EAAMc,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,YAAa,qBAAsBV,KAAM,iBAAkBW,UAAWC,EAAAA,GACrEC,SAAU,CAACC,EAAAA,EAAUZ,QAEjC,0BACI,6CAUZ,EA1CgB,SAACR,GACb,IAAIqB,EAAQrB,EAAMsB,YAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAC,GAAM,OAAI,SAAC,EAAD,CAA4BpB,KAAMoB,EAAOpB,KAAMJ,GAAIwB,EAAOxB,IAAzCwB,EAAOxB,OACrEyB,EAAkBN,EAAMO,SAASH,KAAK,SAAAI,GAAO,OAAK,SAAC,EAAD,CAA0BtB,KAAMsB,EAAQA,SAA1BA,EAAQ3B,OAO5E,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACMmB,KAEN,gBAAKpB,UAAWC,EAAhB,SACMuB,KAEN,SAACjB,EAAD,CAAwBG,SAbZ,SAACiB,GACjB9B,EAAM+B,YAAYD,EAAOE,uB,oBCGjC,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAdkB,SAACb,GACnB,MAAM,CACFC,YAAaD,EAAMC,gBAGF,SAACa,GACtB,MAAM,CACFJ,YAAa,SAACC,GACVG,GAASC,EAAAA,EAAAA,IAAmBJ,SAOpCK,EAAAA,EAFJ,CAGEC,I,iJCnBWD,EAAmB,SAACE,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAKC,KAAKzC,MAAM0C,QAET,SAACH,GAAD,UAAeE,KAAKzC,SAFI,SAAC,KAAD,CAAUK,GAAG,eAHT,GACXsC,EAAAA,WAchC,OAHqCT,EAAAA,EAAAA,KAHJ,SAACb,GAAD,MAAY,CACzCqB,OAAQrB,EAAMuB,KAAKF,UAEcR,CAAoCM","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__QSFb6\",\"dialogsItem\":\"Dialogs_dialogsItem__5BvEh\",\"active\":\"Dialogs_active__HegyQ\",\"dialog\":\"Dialogs_dialog__5nA2Y\",\"messages\":\"Dialogs_messages__FIySL\",\"message\":\"Dialogs_message__L6Ra1\"};","import React from \"react\";\r\nimport style from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs\" + props.id;\r\n    return (\r\n        <div className={style.dialogs + \" \" + style.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={style.message}>{props.text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport style from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength10 = maxLengthCreator(50);\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogElements = state.dialogs.map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>);\r\n    let messageElements = state.messages.map (message =>  <Message key={message.id} text={message.message}/>)\r\n    \r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItem}>\r\n                { dialogElements }\r\n            </div>\r\n            <div className={style.messages}>\r\n                { messageElements }\r\n            </div>\r\n            <AddDialogsMessageRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddDialogsMessage = (props) => {\r\n    return (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder={\"Enter your message\"} name={\"newMessageBody\"} component={Textarea}\r\n                    validate={[required, maxLength10]}/>\r\n        </div>\r\n        <div>\r\n            <button>Send</button>\r\n        </div>\r\n        \r\n    </form>\r\n    )\r\n}\r\n\r\nconst AddDialogsMessageRedux = reduxForm({\r\n    form: 'addDialogsMessage'\r\n})(AddDialogsMessage)\r\nexport default Dialogs;","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    });\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","path","id","className","style","to","name","text","maxLength10","maxLengthCreator","AddDialogsMessageRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","state","dialogsPage","dialogElements","dialogs","map","dialog","messageElements","messages","message","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","Component","RedirectComponent","this","isAuth","React","auth"],"sourceRoot":""}